plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
    id 'org.sonarqube' version '5.1.0.4882'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }			  //pour biweekly
	maven { url "https://repo1.maven.org/maven2" }//pour biweekly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	implementation 'com.github.mangstadt:biweekly:0.6.6' //parser
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'//tests d'int√©gration avec H2
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core:5.6.0' // Mockito
    testImplementation 'org.mockito:mockito-junit-jupiter:5.6.0' // Mockito avec JUnit5
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

test {
    useJUnitPlatform()
	finalizedBy jacocoTestReport
}
tasks.withType(org.springframework.boot.gradle.tasks.bundling.BootJar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Configuration de JaCoCo
jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

// Configuration de SonarQube
sonarqube {
    properties {
        property "sonar.projectKey", "uciie_DevOps1_EDT_Intelligent"
        property "sonar.organization", "uciie"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.sourceEncoding", "UTF-8"
    }
}