# Base JDK pour exécuter le gradle wrapper en dev
FROM eclipse-temurin:21-jdk

# Crée un utilisateur non-root dédié
RUN addgroup --system appgroup && adduser --system --ingroup appgroup --uid 10001 appuser

WORKDIR /app

# Copie minimaliste pour profiter du cache si on build en image (optionnel en dev)
# On ne lance pas gradle ici (hot-reload via volume), mais ça permet une image standalone si besoin.
COPY --chown=appuser:appgroup gradlew gradlew
COPY --chown=appuser:appgroup gradle gradle
COPY --chown=appuser:appgroup build.gradle settings.gradle ./
COPY --chown=appuser:appgroup src src

# Rend les ressources copiées en lecture seule (principe demandé)
# Note: le bind mount du compose recouvrira /app en dev, mais cette étape garantit l'image propre.
RUN chmod -R a-w /app && \
    chmod +x /app/gradlew

# Répertoires qui DOIVENT écrire en dev:
# - build output
# - cache Gradle
RUN mkdir -p /app/build /home/appuser/.gradle && \
    chown -R appuser:appgroup /app/build /home/appuser/.gradle && \
    chmod -R u+rwX /app/build /home/appuser/.gradle

USER appuser

EXPOSE 8080
# En dev : bootRun pour hot reload (spring-devtools recommandé côté deps)
CMD ["./gradlew", "bootRun", "--no-daemon"]
